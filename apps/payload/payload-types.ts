/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    admins: AdminAuthOperations;
  };
  collections: {
    admins: Admin;
    pages: Page;
    media: Media;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    theme: Theme;
  };
  locale: null;
  user: Admin & {
    collection: 'admins';
  };
}
export interface AdminAuthOperations {
  forgotPassword: {
    email: string;
  };
  login: {
    password: string;
    email: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "admins".
 */
export interface Admin {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  publishedDate?: string | null;
  header?: {
    showHeader?: boolean | null;
    companyName?: string | null;
    logo?: (string | null) | Media;
    navItems?: {
      spaceBetween?: ('space-x-2' | 'space-x-4' | 'space-x-6' | 'space-x-8' | 'space-x-12') | null;
      items?:
        | {
            link: {
              type?: ('custom' | 'reference') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: string | Page;
              } | null;
              url?: string | null;
              label: string;
              appearance?: ('primary' | 'secondary' | 'link') | null;
              size?: ('small' | 'medium' | 'large') | null;
            };
            id?: string | null;
          }[]
        | null;
    };
  };
  layout: {
    invertBackground?: boolean | null;
    logo?: string | Media | null;
    title?: string | null;
    description?: string | null;
    links?:
      | {
          link: {
            type?: ('custom' | 'reference') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: string | Page;
            } | null;
            url?: string | null;
            label: string;
            appearance?: ('primary' | 'secondary') | null;
            size?: ('small' | 'medium' | 'large') | null;
          };
          id?: string | null;
        }[]
      | null;
    subtext?: string | null;
    id?: string | null;
    blockName?: string | null;
    blockType: 'heroBlock';
  }[];
  footer?: {
    showFooter?: boolean | null;
    logo?: (string | null) | Media;
    companyName?: string | null;
    copyrightLine?: string | null;
    socialButtons?:
      | {
          url: string;
          icon: string | Media;
          id?: string | null;
        }[]
      | null;
    footerColumns?:
      | {
          columnLinks?:
            | {
                link: {
                  type?: ('custom' | 'reference') | null;
                  newTab?: boolean | null;
                  reference?: {
                    relationTo: 'pages';
                    value: string | Page;
                  } | null;
                  url?: string | null;
                  label: string;
                  appearance?: ('primary' | 'secondary' | 'link') | null;
                  size?: ('small' | 'medium' | 'large') | null;
                };
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
  };
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'admins';
    value: string | Admin;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme".
 */
export interface Theme {
  id: string;
  theme?: ('light' | 'dark') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}